{"ast":null,"code":"var _jsxFileName = \"/home/simon/tr_course/ecomnew/src/components/productSmall.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass ProductSmall extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addtobasket = (event, button) => {\n      if (button === \"dvd\") {\n        this.props.addDVDToBasket(event.target.value);\n      }\n\n      if (button === \"blu\") {\n        this.props.addBluToBasket(event.target.value);\n      }\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = buttonName => {// this.setState({ open: false });\n      // if (this.props.buttonHandlerFunction(buttonName) === \"close\") {\n      //     return\n      // }\n      // this.props.buttonHandlerFunction(buttonName)\n    };\n\n    this.state = {\n      hover: \"normal centered\",\n      open: false\n    };\n\n    this.title = () => {\n      if (this.props.jb.title.length < 11) {\n        return \"bigtitle\";\n      } else {\n        if (this.props.jb.title.length < 21) return \"mediumtitle\";\n      }\n\n      return \"smalltitle\";\n    };\n\n    this.onMouseEnter = () => {\n      this.setState({\n        hover: \"hover centered\"\n      });\n    };\n\n    this.onMouseLeave = () => {\n      this.setState({\n        hover: \"normal centered\"\n      });\n    };\n  }\n\n  render() {\n    var dir = require('./images/product/' + this.props.jb.image);\n\n    return React.createElement(\"div\", {\n      className: \"col-sm-12 col-md-6 col-lg-4 col-xl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.jb.title), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.jb.synopsis)), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      value: \"close\",\n      onClick: this.handleClose,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      value: \"buydvd\",\n      onClick: this.addtobasket,\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Buy DVD price \\xA3\", this.props.jb.price), React.createElement(Button, {\n      value: \"buybluray\",\n      onClick: this.addtobasket,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Buy BluRay price \\xA3\", this.props.jb.priceblu))), React.createElement(\"div\", {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      className: this.state.hover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.handleClickOpen,\n      className: \"productnamebox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"{this.title()} title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.jb.title)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: this.handleClickOpen,\n      className: \"thumbnail img-fluid centered\",\n      src: dir,\n      alt: this.props.jb.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"small-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.props.jb.synopsis.slice(0, 70), React.createElement(\"span\", {\n      className: \"dotdotbuton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.handleClickOpen,\n      size: \"small\",\n      color: \"primary\",\n      className: \"dotdotbuton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"........\"))), React.createElement(\"div\", {\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      value: this.props.value,\n      onClick: e => {\n        this.addtobasket(e, \"dvd\");\n      },\n      type: \"button\",\n      className: \"btn btn-danger badge-spaced\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Add DVD to basket \", React.createElement(\"span\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\xA3\", this.props.jb.price)), React.createElement(\"button\", {\n      value: this.props.value,\n      onClick: e => {\n        this.addtobasket(e, \"blu\");\n      },\n      type: \"button\",\n      className: \"btn btn-primary badge-spaced\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add BluRay to basket \", React.createElement(\"span\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\xA3\", this.props.jb.priceblu)))));\n  }\n\n}\n\nexport default ProductSmall;","map":{"version":3,"sources":["/home/simon/tr_course/ecomnew/src/components/productSmall.js"],"names":["React","Component","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ProductSmall","addtobasket","event","button","props","addDVDToBasket","target","value","addBluToBasket","handleClickOpen","setState","open","handleClose","buttonName","state","hover","title","jb","length","onMouseEnter","onMouseLeave","render","dir","require","image","synopsis","price","priceblu","slice","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n import Dialog from '@material-ui/core/Dialog';\n import DialogActions from '@material-ui/core/DialogActions';\n import DialogContent from '@material-ui/core/DialogContent';\n import DialogContentText from '@material-ui/core/DialogContentText';\n import DialogTitle from '@material-ui/core/DialogTitle';\n\n\nclass ProductSmall extends Component {\n\n    addtobasket = (event,button) => {\n        if (button===\"dvd\") {\n        this.props.addDVDToBasket(event.target.value)\n        }\n        if (button===\"blu\") {\n        this.props.addBluToBasket(event.target.value)\n        }\n        }\n\n\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = (buttonName) => {\n        // this.setState({ open: false });\n        // if (this.props.buttonHandlerFunction(buttonName) === \"close\") {\n        //     return\n        // }\n        // this.props.buttonHandlerFunction(buttonName)\n    };\n\n    state = {\n        hover: \"normal centered\",\n        open: false\n    }\n\n    title = () => {\n        if (this.props.jb.title.length < 11) {\n            return \"bigtitle\"\n        } else {\n            if (this.props.jb.title.length < 21)\n                return \"mediumtitle\"\n        }\n        return \"smalltitle\"\n    }\n\n    onMouseEnter = () => {\n        this.setState({\n            hover: \"hover centered\"\n        });\n    }\n\n    onMouseLeave = () => {\n        this.setState({\n            hover: \"normal centered\"\n        })\n    }\n\n    render() {\n        var dir = require('./images/product/' + this.props.jb.image);\n\n        return (\n\n            <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-3\">\n\n                 <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.jb.title}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            {this.props.jb.synopsis}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button value=\"close\" onClick={this.handleClose} variant=\"outlined\" >\n                            Close\n                        </Button>\n                        <Button value=\"buydvd\" onClick={this.addtobasket} variant=\"contained\" color=\"secondary\" >\n                            Buy DVD price £{this.props.jb.price}\n                        </Button>\n                        <Button value=\"buybluray\" onClick={this.addtobasket} variant=\"contained\" color=\"primary\" >\n                            Buy BluRay price £{this.props.jb.priceblu}\n                        </Button>\n\n                    </DialogActions>\n                </Dialog> \n\n                <div onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} className={this.state.hover}>\n\n                    <div onClick={this.handleClickOpen} className=\"productnamebox\">\n                        <h4 className=\"{this.title()} title\">{this.props.jb.title}</h4>\n                    </div>\n\n                    <div>\n                        <img onClick={this.handleClickOpen} className=\"thumbnail img-fluid centered\" src={dir} alt={this.props.jb.title}></img>\n                    </div>\n\n                    <div className=\"small-description\">\n                        {this.props.jb.synopsis.slice(0, 70)}\n                        <span className=\"dotdotbuton\"><Button onClick={()=> this.handleClickOpen} size=\"small\" color=\"primary\" className=\"dotdotbuton\">........</Button></span>\n                    </div>\n                    <div className=\"centered\"> \n\n\n\n\n                        <button value={this.props.value} onClick={(e)=> {this.addtobasket(e,\"dvd\")}} type=\"button\" className=\"btn btn-danger badge-spaced\">\n                            Add DVD to basket <span className=\"badge badge-light\">£{this.props.jb.price}</span>\n                        </button>\n                        <button value={this.props.value} onClick={(e)=> {this.addtobasket(e,\"blu\")}} type=\"button\" className=\"btn btn-primary badge-spaced\">\n                            Add BluRay to basket <span className=\"badge badge-light\">£{this.props.jb.priceblu}</span>\n                        </button> \n                     </div> \n\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default ProductSmall;"]},"metadata":{},"sourceType":"module"}